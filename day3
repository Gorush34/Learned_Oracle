select '쌍용교육센터 서울교육대학교 교육문화원'
         
         , instr('쌍용교육센터 서울교육대학교 교육문화원', '교육', 1, 1) -- 3
         --  '쌍용교육센터 서울교육대학교 교육문화원' 에서 '교육' 이 나온 위치를 찾는데
         --  출발점이 1 번째 부터 1 번째로 나오는 '교육'의 위치를 알려달라는 말이다.
         
         , instr('쌍용교육센터 서울교육대학교 교육문화원', '교육', -1, 1) -- 16
         --  '쌍용교육센터 서울교육대학교 교육문화원' 에서 '교육' 이 나온 위치를 찾는데
         --  출발점이 역순으로 1 번째 부터 1 번째로 나오는 '교육'의 위치를 알려달라는 말이다.
         
         , instr('쌍용교육센터 서울교육대학교 교육문화원', '교육', -6, 2) -- 3
         --  '쌍용교육센터 서울교육대학교 교육문화원' 에서 '교육' 이 나온 위치를 찾는데
         --  출발점이 역순으로 6 번째 부터 2 번째로 나오는 '교육'의 위치를 알려달라는 말이다.
         
         , instr('쌍용교육센터 서울교육대학교 교육문화원', '교육', -6, 3) -- 0
         --  '쌍용교육센터 서울교육대학교 교육문화원' 에서 '교육' 이 나온 위치를 찾는데
         --  출발점이 역순으로 6 번째 부터 3 번째로 나오는 '교육'의 위치를 알려달라는 말이다.
         --  그러한 값이 없다라면 0 이 나온다.
         
         , instr('쌍용교육센터 서울교육대학교 교육문화원', '교육', -6) -- 10
         --  '쌍용교육센터 서울교육대학교 교육문화원' 에서 '교육' 이 나온 위치를 찾는데
         --  출발점이 역순으로 6 번째 부터 1 번째로 나오는 '교육'의 위치를 알려달라는 말이다.
         --  출발점만 나오면 뒤에 , 1 이 생략된 것이다.
         
    from dual;    
    
    --     , substr(filepath, filepath에서 마지막으로 나오는 \의 위치값+1 )
    --       filepath에서 마지막으로 나오는 \의 위치값은 instr(filepath, '\', -1)
    
    select fileno as "파일번호"
         , filepath as "파일경로"
         , substr(filepath, instr(filepath, '\', -1) +1 ) as "파일명"
    from tbl_files;  
    
    --> 어제 reverse 2번써서 하던거에 비해서 너무 편해졌다.
    
    -- 1.7 lpad(대상,확보할 byte, 채울 문자) : 왼쪽부터 문자 자리채움 **** ---
    -- 1.8 rpad(대상,확보할 byte, 채울 문자) : 오른쪽부터 문자 자리채움 **** ---
    -- UTF-8은 한글이 3byte 인데 여기서는 2byte 로 취급됨.
    
    select lpad('교육센터',10, '*') -- 10 byte를 확보해서 거기에 '교육센터'를 넣은 후 빈공간(2byte)이 있으면 왼쪽부터 '*'로 채움.
         , rpad('교육센터',10, '*') -- 10 byte를 확보해서 거기에 '교육센터'를 넣은 후 빈공간(2byte)이 있으면 오른쪽부터 '*'로 채움.
    from dual;
    -- **교육센터
    -- 교육센터**
    
    
    -- 1.9 ltrim : 왼쪽부터 문자를 제거한다 **** --- (대상, 지울 문자) - 지울문자가 아닌 것이 나올때까지
    -- 1.10 rtrim : 오른쪽부터 문자를 제거한다 **** --- (대상, 지울 문자) - 지울문자가 아닌 것이 나올때까지
    -- 1.11 trim : 왼쪽,오른쪽부터 공백을 제거한다 **** ---
    
    select ltrim('abcacacababababacacacTaaddddSSS','abcd')
         , rtrim('abcacacababababacacacTaadddd','abcd')
         , rtrim(ltrim('abcacacababababacacacTaadddd','abcd'),'abcd')
    from dual;
    
    -- TaaddddSSS	
    -- abcacacababababacacacT
    -- T
    
    select '쌍용' || '       교육        ' || '센터'
         , '쌍용' || trim('       교육        ') || '센터'
    from dual;   
    
    -- 쌍용       교육        센터	
    -- 쌍용교육센터
    
    
    -- 1.12 translate(대상, 바꾸기 전 형식, 바꿀 형식) --
    -- 바꾸기 전 형식과 바꿀 형식은 반드시 1:1로 바꿔야 함.
    select translate('010-2345-6789'
                   , '0123456789'
                   , '영일이사마오육칠팔구')
    from dual;
    
    -- 1.13 replace(대상, 교체 전 대상, 교체 후 대상) ---
    select replace('쌍용교육센터 서울교육대학교 교육문화원'
                 , '교육'
                 , 'education')
    from dual;
    
    -- 1.14 length(대상) ==> 문자열의 길이를 알려주는 것 ---
    -- lengthb 는 문자열의 byte 수를 알려줌
    select length('쌍용center') -- 8
    from dual;
    
    select lengthb('쌍용center') -- 12
    from dual;
    
    
    -------------------------------------------------------------------------------------------------
    --------------------- >> 2. 숫자 함수 << ------------------------------------------------------------------------
    
    -- 2.1 mod(대상,나눌 숫자) : 나머지를 구해주는 것
    
    select 5/2, mod(5,2), trunc(5/2)
    from dual;
    --    2.5	    1       2
    
    -- 2.2 round(대상, 나타낼 소숫점자리수) : 반올림을 해주는 것
    select 94.547
         , round(94.547)        --95
         , round(94.547,0)      --95       0은 정수 1자리까지만 나타내어준다.
         , round(94.547,1)      --94.5     1은 소수 첫째자리까지만 나타내어준다.
         , round(94.547,2)      --94.55    2은 소수 둘째자리까지만 나타내어준다.
         , round(94.547,-1)     --90    -1는 정수 십의자리부터만 나타내어준다.
         , round(94.547,-2)     --100    -2는 정수 백의자리부터만 나타내어준다.
    from dual;
    
    -- 2.3 trunc(대상, 나눌 숫자) : 절삭을 해주는 것
    select 94.547
         , trunc(94.547)        --94
         , trunc(94.547,0)      --94       0은 정수 1자리까지만 나타내어준다.
         , trunc(94.547,1)      --94.5     1은 소수 첫째자리까지만 나타내어준다.
         , trunc(94.547,2)      --94.54    2은 소수 둘째자리까지만 나타내어준다.
         , trunc(94.547,-1)     --90    -1는 정수 십의자리부터만 나타내어준다.
         , trunc(94.547,-2)     --0    -2는 정수 백의자리부터만 나타내어준다.
    from dual;
    
    -- 실습을 위한 테이블 생성 및 데이터 삽입 --
    
    -- *** [성적처리] *** --
    create table tbl_sungjuk
    (hakbun      varchar2(20)
    ,name        varchar2(20)
    ,kor         number(3)
    ,eng         number(3)
    ,math        number(3)
    );
    
    select *
    from tbl_sungjuk;
    
    --- *** 데이터 입력하기 *** ---
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist001','한석규',90,92,93);
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist002','두석규',100,100,100);
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist003','세석규',71,72,73);
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist004','네석규',89,87,81);
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist005','오석규',60,50,40);
    insert into tbl_sungjuk(hakbun, name, kor, eng, math) values('sist006','육석규',80,81,87);
    -- DML은 반드시 commit!!
    commit;
    
    
    ------------------------------------------------------------------------------------------------------------------------
    학번  성명  국어  영어  수학  총점  평균(소수부 첫째자리까지 나타내되 반올림) 학점(평균이 90 이상 'A', 90미만 80이상 'B', .. 60미만이면 'F'
    ------------------------------------------------------------------------------------------------------------------------
    
    
    select hakbun as "학번"
         , name as "성명"
         , kor as "국어"
         , eng as "영어"
         , math as "수학"
         , (kor+eng+math) as "총점"
         , round((kor+eng+math)/3, 1) as "평균"
         , case trunc( round((kor+eng+math)/3, 1), -1)
           when 100  then 'A'
           when 90  then 'A'
           when 80  then 'B'
           when 70  then 'C'
           when 60  then 'D'
           else          'F'
           end as "학점1"
           
         , decode(trunc( round((kor+eng+math)/3, 1), -1), 100, 'A'
                                                        , 90 , 'A'
                                                        , 80 , 'B'
                                                        , 70 , 'C'
                                                        , 60 , 'D'
                                                             , 'F')
           as "학점2"
           
           , case
             when trunc( round((kor+eng+math)/3, 1), -1) in(90, 100) then 'A'
             when trunc( round((kor+eng+math)/3, 1), -1) = 80 then 'B'
             when trunc( round((kor+eng+math)/3, 1), -1) = 70 then 'C'
             when trunc( round((kor+eng+math)/3, 1), -1) = 60 then 'D'
             else 'F'
             end as "학점3"
             
    from tbl_sungjuk;
    -- trunc 를 활용해서 학점을 구하는 법을 몰랐음. --> 학점만 구분하면 되니까 위처럼 하는게 깔끔함!
    -- 성적비교는 평균이나 총점으로 하면 되니까..
    
    -- 2.4 power(수, 승) : 거듭제곱
    select 2*2*2*2*2, power(2,5) -- 2의 5승
    from dual;
    
    -- 2.5 sqrt(수, 승) : 제곱근
    select sqrt(16), sqrt(3), sqrt(2)
    from dual;
    
    -- 2.6 sin, cos, tan, asin, acos, atan -- 몰라도됨
    select sin(90), cos(90), tan(90), asin(0.3), acos(0.3), atan(0.3)
    from dual;
    
    -- 2.7 log  -- 몰라도됨
    select log(10, 100)
    from dual;
    
    -- 2.8 sign ==> 결과값이 양수라면 1, 0이면 0, 음수라면 -1
    select sign(5-2), sign(5-5), sign(5-10)
    from dual;

    -- 2.9 ceil(실수) ==> 입력되어진 실수보다 큰 최소의 정수를 나타내어준다.
    --     ceil(정수) ==> 입력되어진 정수를 그대로 나타내어준다.
    select ceil(10.1), ceil(-10.1), ceil(10), ceil(-10)
    from dual;
    
    -- 2.10 floor(실수) ==> 입력되어진 실수보다 작은 최대의 정수를 나타내어준다.
    --      floor(정수) ==> 입력되어진 정수를 그대로 나타내어준다.
    select floor(10.1), floor(-10.1), floor(10), floor(-10)
    from dual;
    
    
    
    
    
    
    
    -------------------------------------------------------------------------------------------------
     --------------------- >> 3. 날짜 함수(진짜 많이 씀) << ------------------------------------------------------------------------
    /*
        날짜1 + 숫자 = 날짜2  ==> 날짜1 에서 숫자(단위가 일수)만큼 더한 값이 날짜2 가 된다.
        날짜1 - 숫자 = 날짜2  ==> 날짜1 에서 숫자(단위가 일수)만큼 뺀 값이 날짜2 가 된다.
        
        여기서 중요한 것은 숫자의 단위는 일(day) 이다.
        
        날짜1 - 날짜2 = 숫자 ==> 결과값인 숫자의 단위는 일(day) 이다.
    */
    
    select 
            sysdate -1, to_char(sysdate -1, 'yyyy-mm-dd hh24:mi:ss') as 어제시각
          , sysdate, to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') as 현재시각
          , sysdate +1, to_char(sysdate +1, 'yyyy-mm-dd hh24:mi:ss') as 내일시각
    from dual;
    
    -- 단위환산 --
    /*
        1 kg = 1000 g
        1 g = 1/1000 kg
        
        1 일 = 24 시간
        1 시간 = 60 분
        1 분 = 1/60 시간
        1 분 = 60 초
        1 초 = 1/60 분
    */
    
    --- *** [퀴즈] 현재시각으로부터 1일 2시간 3분 4초 뒤를 나타내세요 *** ---
    
        select 
            sysdate, to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') as 현재시각
          , sysdate + (1 + 2/24 + 3/24/60 + 4/24/60/60), to_char(sysdate + (1 + 2/24 + 3/24/60 + 4/24/60/60), 'yyyy-mm-dd hh24:mi:ss') as "1일 2시간 3분 4초 뒤"
    from dual;
    
    
    -- 3.1 to_yminterval('년-월'), to_dsinterval('일 시:분:초')
    /*
        to_yminterval 은 년 과 월을 나타내어 
        연산자가 + 이면 날짜에서 더해주는 것이고, 연산자가 - 이면 날짜에서 빼주는 것이다.
        
        to_dsinterval 은 일 시간 분 초를 나타내어
        연산자가 + 이면 날짜에서 더해주는 것이고, 연산자가 - 이면 날짜에서 빼주는 것이다.
        
    */
    
    -- 현재시각으로부터 1년 2개월 3일 4시간 5분 6초 뒤를 나타내세요.
    select  to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') as 현재시각,
            to_char(sysdate + to_yminterval('01-02') + to_dsinterval('003 04:05:06'), 'yyyy-mm-dd hh24:mi:ss') as 바꾼시각
    from dual; 
    
    -- 3.2 add_months(날짜, 숫자)
    /*
        ==> 숫자가 양수이면 날짜에서 숫자 개월수 만큼 더해준 날짜를 나타내는 것이고,
            숫자가 음수이면 날짜에서 숫자 개월수 만큼 뺀 날짜를 나타내는 것이다.
        
        여기서 숫자의 단위는 개월수이다.
    */
    select  to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') as "현재시각",
            to_char(add_months(sysdate, -2), 'yyyy-mm-dd hh24:mi:ss') as "2개월 전"
    from dual;
    
    -- ** 내일 홍길동이 입대한다. 복무기간이 18개월 이라면 제대일자(년-월-일)을 구하세요.
    
    select  to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') as "현재시각",
            to_char(add_months(sysdate+1, 18), 'yyyy-mm-dd') as "제대일자"
    from dual;
    
    -- 3.3 months_between(날짜1, 날짜2)
    /*
          날짜1 에서 날짜2 를 뺀 값으로 그 결과는 숫자가 나오는데 결과물 숫자의 단위는 개월수 이다.
          즉, 두 날짜의 개월차이를 구할 때 사용한다.
     */
    
    select sysdate+3 - sysdate
    from dual;
    -- 날짜1 - 날짜2 = 숫자 ==> 결과값인 숫자의 단위는 일(day) 이다.
    
    select months_between(add_months(sysdate, 3), sysdate),
           months_between(sysdate, add_months(sysdate, 3))
    from dual;
    
    -- 3.4 last_day(특정날짜)
    --     ==> 특정날짜가 포함된 달력에서 맨 마지막날짜를 알려주는 것이다.
    
    select sysdate, last_day(sysdate)
    from dual;
    
    select sysdate, last_day('2022-02-01'),
                    last_day(to_date('2022-02-01', 'yyyy-mm-dd')),
                    last_day('2020-02-01')
    from dual;
    
    -- 3.5 next_day(특정날짜, '일')  '일'~'토'
    --     ==> 특정날짜로 부터 다음번에 돌아오는 가장 빠른 '일'~'토'의 날짜를 알려주는 것이다.
    
    select sysdate
         , next_day(sysdate, '금')
         , next_day(sysdate, '월')
         , next_day(sysdate, '목')
         
    from dual;
    
    -- 3.6 extract ==> 날짜에서 년, 월, 일을 숫자형태로 추출해주는 것이다.
    -- 참고로 to_char() ==> 날짜에서 년,월,일을 문자형태로 추출해주는 것이다.
    select sysdate
         , to_char(sysdate, 'yyyy') -- 2022
         , extract(year from sysdate) -- 2022
         , to_char(sysdate, 'mm') -- 01
         , extract(month from sysdate) -- 1
         , to_char(sysdate, 'dd') -- 06
         , extract(day from sysdate) -- 6
         
         , to_char(sysdate, 'hh24')
         , to_char(sysdate, 'mi')
         , to_char(sysdate, 'ss')
    from dual;
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    ---------------------------------------------------------------------------------------------
    --------------------- >> 4. 변환 함수 << ------------------------------------------------------------------------
    
    -- 4.1 to_char(날짜, '형태') ==> 날짜를 '형태' 모양으로 문자형태로 변환시켜주는 것이다.
    --     to_char(숫자, '형태') ==> 숫자를 '형태' 모양으로 문자형태로 변환시켜주는 것이다.
    
    --- 날짜를 문자형태로 변환하기 ---
     select to_char(sysdate, 'yyyy') AS 년도
          , to_char(sysdate, 'mm')   AS 월
          , to_char(sysdate, 'dd')   AS 일
          , to_char(sysdate, 'hh24') AS "24시간"
          , to_char(sysdate, 'am hh') AS "12시간"
          , to_char(sysdate, 'pm hh') AS "12시간"
          , to_char(sysdate, 'mi')   AS 분
          , to_char(sysdate, 'ss')   AS 초
          , to_char(sysdate, 'q')    AS 분기       -- 1월~3월 => 1,   4월~6월 => 2,   7월~9월 => 3,    10월~12월 => 4 
          , to_char(sysdate, 'day')  AS 요일명     -- 월요일(Windows) , Monday(Linux) 
          , to_char(sysdate, 'dy')   AS 줄인요일명  -- 월(Windows) , Mon(Linux)
     from dual;
     
     select to_char(sysdate, 'd')  -- sysdate 의 주의 일요일 부터(지금은 2022년 1월 2일)  sysdate(지금은 2022년 1월 6일) 까지 며칠째 인지를 알려주는 것이다.
                                   --  1(일요일)  2(월요일) 3(화요일) 4(수요일) 5(목요일) 6(금요일) 7(토요일) 
     from dual;
    
    select case to_char(sysdate, 'd')
           when '1' then '일'
           when '2' then '월'
           when '3' then '화'
           when '4' then '수'
           when '5' then '목'
           when '6' then '금'
           when '7' then '토'
           end AS "오늘의요일명1" , 
           
           decode(to_char(sysdate, 'd'), '1', '일'
                                       , '2', '월'
                                       , '3', '화'
                                       , '4', '수'
                                       , '5', '목'
                                       , '6', '금'
                                       , '7', '토')
           AS "오늘의요일명2"
            -- decode는 end 안쓴다!
    from dual;
    
    select to_char(sysdate, 'dd')   -- sysdate 의 월 1일부터(지금은 2022년 1월 1일) sysdate까지 며칠째인지를 알려주는 것이다. 
          , to_char(sysdate, 'ddd')  -- sysdate 의 년도의 1월 1일부터(지금은 2022년 1월 1일) sysdate까지 며칠째인지를 알려주는 것이다. 
     from dual; 
    
     select to_char(add_months(sysdate, 1), 'dd')   -- add_months(sysdate, 1) 은 2022년 2월 6일 이다.
          , to_char(add_months(sysdate, 1), 'ddd')  -- add_months(sysdate, 1) 은 2022년 2월 6일 이다.
     from dual; 
     --     06      037
    
    
     --- *** 숫자를 문자형태로 변환하기 *** ---
    
    select 1234567890
         , to_char(1234567890, '9,999,999,999')
         , to_char(1234567890, '$9,999,999,999')
         , to_char(1234567890, 'L9,999,999,999') -- L은 그 나라의 화폐기호가 나온다.
    from dual;
    -- 1234567890	 1,234,567,890	 $1,234,567,890	        ￦1,234,567,890
    
    
    select 100
         , to_char(100, '999.0') -- 100.0
         , 95.7
         , to_char(95.7, '999.0') --   95.7
         , to_char(95.7, '999.00') --   95.70
         , to_char(95.78, '999.00') --   95.78
    from dual;
    
    -- 4.2 to_date(문자, '형태')  ==> 문자를 '형태' 모양으로 적용한 뒤 날짜형태로 변환시켜주는 것.
    select '2022-01-06' + 1
    from dual;
    -- ORA-01722: invalid number
    
    select to_date('2022-01-06', 'yyyy-mm-dd') + 1
         , to_date('2022/01/06', 'yyyy/mm/dd') + 1
         , to_date('20220106', 'yyyymmdd') + 1
    from dual;
    -- 22/01/07	    22/01/07	22/01/07
    
    select to_date('2022-02-29', 'yyyy-mm-dd') +1 -- 2022-02-29 는 달력에 없으므로 변경 불가.
    from dual;
    
    select to_date('2020-02-29', 'yyyy-mm-dd') +1 -- 2020-02-29 는 달력에 있어서 변경 가능
    from dual;
    
    
    -- 4.3 to_numbe(문자) ==> 숫자모양을 가지는 문자를 숫자형태로 변환시켜주는 것이다.
    select '12345', to_number('12345')
    from dual;
    
    select '50' +10
         , to_number('50')+10
    from dual;
    
    select to_number('홍길동')
    from dual;
    -- ORA-01722: invalid number
    
    
    
    
    -----------------------------------------------------------------------------------------
     --------------------- >> 5. 기타 함수(많이 씀) << ------------------------------------------------------------------------
    
    -- 5.1 case when then else end ==> !! 암기 !!
    -- case (조건- 생략 가능) when (이라면) then (출력), else (when 에 해당되지 않다면 출력), end as ("컬럼명")
    -- 맨 위의 when 이 아니면 아래 when으로 가서 수행, 맨 마지막엔 else를 수행
    select case 5-2
           when 4 then '5-2=4 입니다.'
           when 1 then '5-2=1 입니다.'
           when 3 then '5-2=3 입니다.'
           else '나는 수학을 몰라요ㅜㅜ'
           end AS "결과"
    from dual;
    
    select case
           when 4 > 5 then '4는 5보다 큽니다.'
           when 5 > 7 then '5는 7보다 큽니다.'
           when 3 > 2 then '3은 2보다 큽니다.'
           else '나는 수학을 몰라요ㅜㅜ'
           end AS "결과"
    from dual;
    
    -- 5.2 decode ==> !! 암기 !!
    select decode(5-2, 4, '5-2=4 입니다.'
                     , 1, '5-2=1 입니다.'
                     , 0, '5-2=3 입니다.'
                        , '나는 수학을 몰라요ㅜㅜ') as "결과"
    from dual;
        
    
